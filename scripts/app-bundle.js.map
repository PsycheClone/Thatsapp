{"version":3,"sources":["app.js","chat.js","environment.js","main.js","message.js","test.js","user.js","resources/index.js"],"names":["AppComponent","configureRouter","config","router","title","map","route","name","moduleId","ChatComponent","message","messages","users","nameSet","setName","self","client","WebSocket","onopen","send","createNewUser","onmessage","incoming","parsed","JSON","parse","data","clientNames","console","log","push","otheruser","corresponder","sendMessage","createMessage","stringify","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MessageCustomElement","defaultBindingMode","twoWay","taskQueue","attached","queueMicroTask","$","scrollTop","scrollHeight","TestComponent","activate","params","id","UserCustomElement","status","startConversation","navigateToRoute"],"mappings":";;;;;;;;;;;;;MAAaA,uBAAAA;;;;;2BACXC,2CAAgBC,QAAQC,QAAQ;AAC9B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,KAAP,GAAe,SAAf;AACAF,aAAOG,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAA8BC,MAAM,MAApC,EAAuDC,UAAU,MAAjE,EADS,EAET,EAAEF,OAAO,UAAT,EAAkCC,MAAM,WAAxC,EAA2DC,UAAU,MAArE,EAFS,CAAX;AAID;;;;;;;;;;;;;;;;;;MCRUC,wBAAAA;AAQX,6BAAc;AAAA;;AAAA,WAPdC,OAOc,GAPJ,EAOI;AAAA,WANdC,QAMc,GANH,EAMG;AAAA,WALdC,KAKc,GALN,EAKM;AAAA,WAJdL,IAIc,GAJP,EAIO;AAAA,WAHdM,OAGc,GAHJ,KAGI;AACb;;4BAEDC,6BAAU;AACR,UAAIC,OAAO,IAAX;AACA,WAAKF,OAAL,GAAe,IAAf;AACA,WAAKG,MAAL,GAAc,IAAIC,SAAJ,CAAc,wBAAd,CAAd;AACA,WAAKD,MAAL,CAAYE,MAAZ,GAAqB,YAAW;AAC9BH,aAAKC,MAAL,CAAYG,IAAZ,CAAiBJ,KAAKK,aAAL,EAAjB;AACD,OAFD;AAGA,WAAKJ,MAAL,CAAYK,SAAZ,GAAwB,SAASC,QAAT,CAAkBZ,OAAlB,EAA2B;AACjD,YAAIa,SAASC,KAAKC,KAAL,CAAWf,QAAQgB,IAAnB,CAAb;AACA,YAAGH,OAAOI,WAAV,EAAuB;AACrBC,kBAAQC,GAAR,CAAYN,MAAZ;AACAR,eAAKH,KAAL,GAAaW,OAAOI,WAApB;AACD,SAHD,MAGO;AACLZ,eAAKJ,QAAL,CAAcmB,IAAd,CAAmB,EAAEC,WAAW,YAAW;AAAE,qBAAOhB,KAAKR,IAAL,KAAcgB,OAAOhB,IAA5B;AAAkC,aAA/C,EAAb,EAAgEyB,cAAcT,OAAOhB,IAArF,EAA2FG,SAASa,OAAOb,OAA3G,EAAnB;AACD;AACF,OARD;AASD;;4BAEDuB,qCAAc;AACZ,WAAKjB,MAAL,CAAYG,IAAZ,CAAiB,KAAKe,aAAL,EAAjB;AACA,WAAKxB,OAAL,GAAe,EAAf;AACD;;4BAEDU,yCAAgB;AACd,aAAOI,KAAKW,SAAL,CAAe;AACpB,mBAAW,KAAK5B;AADI,OAAf,CAAP;AAGD;;4BAED2B,yCAAgB;AACd,aAAOV,KAAKW,SAAL,CAAe;AACpB,gBAAQ,KAAK5B,IADO;AAEpB,mBAAW,KAAKG;AAFI,OAAf,CAAP;AAID;;;;;;;;;;;oBC7CY;AACb0B,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQrC,MAAR,CAAe;AACbsC,qBAAiB,sBAAYJ,KADhB;AAEbK,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnBYC,+BAAAA,+BADZ,oEAEE,gCAAS,EAAEC,oBAAoB,8BAAYC,MAAlC,EAAT;AAED,kCAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AACrB,WAAKA,SAAL,GAAiBA,SAAjB;AACD;;mCAEDC,+BAAW;AACT,WAAKD,SAAL,CAAeE,cAAf,CAA8B,YAAM;AAClCC,UAAE,iBAAF,EAAqBC,SAArB,CAA+BD,EAAE,iBAAF,EAAqB,CAArB,EAAwBE,YAAvD;AACD,OAFD;AAGD;;;;;;;;;;;;;;;;;;;;;MChBUC,wBAAAA;;;;;4BACXC,6BAASC,QAAQ;AACf,WAAKC,EAAL,GAAUD,OAAOC,EAAjB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCEUC,4BAAAA,4BADZ,8DAEE,gCAAS,EAAEZ,oBAAoB,8BAAYC,MAAlC,EAAT;AAED,+BAAYnD,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAK+D,MAAL,GAAc,WAAd;AACD;;gCAEDC,iDAAoB;AAClB,WAAKhE,MAAL,CAAYiE,eAAZ,CAA4B,WAA5B,EAAyC,EAACJ,IAAI,GAAL,EAAzC;AACD;;;;;;;;;;;;;;UCfa1B,YAAAA;AAAT,WAASA,SAAT,CAAmBpC,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class AppComponent {\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Aurelia';\n    config.map([\n      { route: ['', 'home'],        name: 'home',            moduleId: 'chat' },\n      { route: 'test/:id',              name: 'justatest',       moduleId: 'test' }\n    ]);\n  }\n}\n","export class ChatComponent {\n  message = '';\n  messages = [];\n  users = [];\n  name = '';\n  nameSet = false;\n  client;\n\n  constructor() {\n  }\n\n  setName() {\n    var self = this;\n    this.nameSet = true;\n    this.client = new WebSocket('ws://172.31.90.24:8001')\n    this.client.onopen = function() {\n      self.client.send(self.createNewUser());\n    }\n    this.client.onmessage = function incoming(message) {\n      let parsed = JSON.parse(message.data)\n      if(parsed.clientNames) {\n        console.log(parsed)\n        self.users = parsed.clientNames;\n      } else {\n        self.messages.push({ otheruser: function() { return self.name === parsed.name }(), corresponder: parsed.name, message: parsed.message });\n      }\n    }\n  }\n\n  sendMessage() {\n    this.client.send(this.createMessage())\n    this.message = '';\n  }\n\n  createNewUser() {\n    return JSON.stringify({\n      \"newUser\": this.name\n    });\n  }\n\n  createMessage() {\n    return JSON.stringify({\n      \"name\": this.name,\n      \"message\": this.message\n    });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\nimport {bindable, bindingMode} from 'aurelia-framework';\nimport {TaskQueue} from 'aurelia-framework';\n\n@inject(TaskQueue)\nexport class MessageCustomElement {\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) message;\n\n  constructor(taskQueue) {\n    this.taskQueue = taskQueue;\n  }\n\n  attached() {\n    this.taskQueue.queueMicroTask(() => {\n      $('#chat-container').scrollTop($('#chat-container')[0].scrollHeight)\n    });\n  }\n}\n","export class TestComponent {\n  activate(params) {\n    this.id = params.id\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {bindable, bindingMode} from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\n@inject(Router)\nexport class UserCustomElement {\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) user;\n\n  constructor(router) {\n    this.router = router;\n    this.status = \"connected\"\n  }\n\n  startConversation() {\n    this.router.navigateToRoute('justatest', {id: 456})\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}